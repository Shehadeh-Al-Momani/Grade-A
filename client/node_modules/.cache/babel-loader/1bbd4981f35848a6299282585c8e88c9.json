{"ast":null,"code":"/**\n * Sets a constant default value for the property when it is undefined.\n * @template T\n * @template {keyof T} Property\n * @param {T} object An object.\n * @param {Property} property A property of the provided object.\n * @param {T[Property]} defaultValue The default value to set for the property.\n * @returns {T[Property]} The defaulted property value.\n */\nconst d = (object, property, defaultValue) => {\n  if (typeof object[property] === 'undefined' && typeof defaultValue !== 'undefined') {\n    object[property] = defaultValue;\n  }\n\n  return object[property];\n};\n/**\n * Resolves the value for a nested object option.\n * @template T\n * @template {keyof T} Property\n * @template Result\n * @param {T} object An object.\n * @param {Property} property A property of the provided object.\n * @param {function(T | undefined): Result} fn The handler to resolve the property's value.\n * @returns {Result} The resolved option value.\n */\n\n\nconst nestedOption = (object, property, fn) => {\n  object[property] = fn(object[property]);\n  return object[property];\n};\n/**\n * Normalizes the options for the plugin.\n * @param {import('../types').ReactRefreshPluginOptions} options Non-normalized plugin options.\n * @returns {import('../types').NormalizedPluginOptions} Normalized plugin options.\n */\n\n\nconst normalizeOptions = options => {\n  // Show deprecation notice for the `disableRefreshCheck` option and remove it\n  if (typeof options.disableRefreshCheck !== 'undefined') {\n    delete options.disableRefreshCheck;\n    console.warn(['The \"disableRefreshCheck\" option has been deprecated and will not have any effect on how the plugin parses files.', 'Please remove it from your configuration.'].join(' '));\n  }\n\n  d(options, 'exclude', /node_modules/i);\n  d(options, 'include', /\\.([jt]sx?|flow)$/i);\n  d(options, 'forceEnable');\n  nestedOption(options, 'overlay', overlay => {\n    /** @type {import('../types').NormalizedErrorOverlayOptions} */\n    const defaults = {\n      entry: require.resolve('../../client/ErrorOverlayEntry'),\n      module: require.resolve('../../overlay'),\n      sockIntegration: 'wds'\n    };\n\n    if (overlay === false) {\n      return false;\n    }\n\n    if (typeof overlay === 'undefined' || overlay === true) {\n      return defaults;\n    }\n\n    d(overlay, 'entry', defaults.entry);\n    d(overlay, 'module', defaults.module);\n    d(overlay, 'sockIntegration', defaults.sockIntegration);\n    d(overlay, 'sockHost');\n    d(overlay, 'sockPath');\n    d(overlay, 'sockPort');\n    d(options, 'useLegacyWDSSockets');\n    return overlay;\n  });\n  return options;\n};\n\nmodule.exports = normalizeOptions;","map":{"version":3,"sources":["E:/JCA/Projects/Project-5/Grade-A/Front-End/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/normalizeOptions.js"],"names":["d","object","property","defaultValue","nestedOption","fn","normalizeOptions","options","disableRefreshCheck","console","warn","join","overlay","defaults","entry","require","resolve","module","sockIntegration","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,CAAC,GAAG,CAACC,MAAD,EAASC,QAAT,EAAmBC,YAAnB,KAAoC;AAC5C,MAAI,OAAOF,MAAM,CAACC,QAAD,CAAb,KAA4B,WAA5B,IAA2C,OAAOC,YAAP,KAAwB,WAAvE,EAAoF;AAClFF,IAAAA,MAAM,CAACC,QAAD,CAAN,GAAmBC,YAAnB;AACD;;AACD,SAAOF,MAAM,CAACC,QAAD,CAAb;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,YAAY,GAAG,CAACH,MAAD,EAASC,QAAT,EAAmBG,EAAnB,KAA0B;AAC7CJ,EAAAA,MAAM,CAACC,QAAD,CAAN,GAAmBG,EAAE,CAACJ,MAAM,CAACC,QAAD,CAAP,CAArB;AACA,SAAOD,MAAM,CAACC,QAAD,CAAb;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,gBAAgB,GAAIC,OAAD,IAAa;AACpC;AACA,MAAI,OAAOA,OAAO,CAACC,mBAAf,KAAuC,WAA3C,EAAwD;AACtD,WAAOD,OAAO,CAACC,mBAAf;AACAC,IAAAA,OAAO,CAACC,IAAR,CACE,CACE,mHADF,EAEE,2CAFF,EAGEC,IAHF,CAGO,GAHP,CADF;AAMD;;AAEDX,EAAAA,CAAC,CAACO,OAAD,EAAU,SAAV,EAAqB,eAArB,CAAD;AACAP,EAAAA,CAAC,CAACO,OAAD,EAAU,SAAV,EAAqB,oBAArB,CAAD;AACAP,EAAAA,CAAC,CAACO,OAAD,EAAU,aAAV,CAAD;AAEAH,EAAAA,YAAY,CAACG,OAAD,EAAU,SAAV,EAAsBK,OAAD,IAAa;AAC5C;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,KAAK,EAAEC,OAAO,CAACC,OAAR,CAAgB,gCAAhB,CADQ;AAEfC,MAAAA,MAAM,EAAEF,OAAO,CAACC,OAAR,CAAgB,eAAhB,CAFO;AAGfE,MAAAA,eAAe,EAAE;AAHF,KAAjB;;AAMA,QAAIN,OAAO,KAAK,KAAhB,EAAuB;AACrB,aAAO,KAAP;AACD;;AACD,QAAI,OAAOA,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,KAAK,IAAlD,EAAwD;AACtD,aAAOC,QAAP;AACD;;AAEDb,IAAAA,CAAC,CAACY,OAAD,EAAU,OAAV,EAAmBC,QAAQ,CAACC,KAA5B,CAAD;AACAd,IAAAA,CAAC,CAACY,OAAD,EAAU,QAAV,EAAoBC,QAAQ,CAACI,MAA7B,CAAD;AACAjB,IAAAA,CAAC,CAACY,OAAD,EAAU,iBAAV,EAA6BC,QAAQ,CAACK,eAAtC,CAAD;AACAlB,IAAAA,CAAC,CAACY,OAAD,EAAU,UAAV,CAAD;AACAZ,IAAAA,CAAC,CAACY,OAAD,EAAU,UAAV,CAAD;AACAZ,IAAAA,CAAC,CAACY,OAAD,EAAU,UAAV,CAAD;AACAZ,IAAAA,CAAC,CAACO,OAAD,EAAU,qBAAV,CAAD;AAEA,WAAOK,OAAP;AACD,GAxBW,CAAZ;AA0BA,SAAOL,OAAP;AACD,CA3CD;;AA6CAU,MAAM,CAACE,OAAP,GAAiBb,gBAAjB","sourcesContent":["/**\n * Sets a constant default value for the property when it is undefined.\n * @template T\n * @template {keyof T} Property\n * @param {T} object An object.\n * @param {Property} property A property of the provided object.\n * @param {T[Property]} defaultValue The default value to set for the property.\n * @returns {T[Property]} The defaulted property value.\n */\nconst d = (object, property, defaultValue) => {\n  if (typeof object[property] === 'undefined' && typeof defaultValue !== 'undefined') {\n    object[property] = defaultValue;\n  }\n  return object[property];\n};\n\n/**\n * Resolves the value for a nested object option.\n * @template T\n * @template {keyof T} Property\n * @template Result\n * @param {T} object An object.\n * @param {Property} property A property of the provided object.\n * @param {function(T | undefined): Result} fn The handler to resolve the property's value.\n * @returns {Result} The resolved option value.\n */\nconst nestedOption = (object, property, fn) => {\n  object[property] = fn(object[property]);\n  return object[property];\n};\n\n/**\n * Normalizes the options for the plugin.\n * @param {import('../types').ReactRefreshPluginOptions} options Non-normalized plugin options.\n * @returns {import('../types').NormalizedPluginOptions} Normalized plugin options.\n */\nconst normalizeOptions = (options) => {\n  // Show deprecation notice for the `disableRefreshCheck` option and remove it\n  if (typeof options.disableRefreshCheck !== 'undefined') {\n    delete options.disableRefreshCheck;\n    console.warn(\n      [\n        'The \"disableRefreshCheck\" option has been deprecated and will not have any effect on how the plugin parses files.',\n        'Please remove it from your configuration.',\n      ].join(' ')\n    );\n  }\n\n  d(options, 'exclude', /node_modules/i);\n  d(options, 'include', /\\.([jt]sx?|flow)$/i);\n  d(options, 'forceEnable');\n\n  nestedOption(options, 'overlay', (overlay) => {\n    /** @type {import('../types').NormalizedErrorOverlayOptions} */\n    const defaults = {\n      entry: require.resolve('../../client/ErrorOverlayEntry'),\n      module: require.resolve('../../overlay'),\n      sockIntegration: 'wds',\n    };\n\n    if (overlay === false) {\n      return false;\n    }\n    if (typeof overlay === 'undefined' || overlay === true) {\n      return defaults;\n    }\n\n    d(overlay, 'entry', defaults.entry);\n    d(overlay, 'module', defaults.module);\n    d(overlay, 'sockIntegration', defaults.sockIntegration);\n    d(overlay, 'sockHost');\n    d(overlay, 'sockPath');\n    d(overlay, 'sockPort');\n    d(options, 'useLegacyWDSSockets');\n\n    return overlay;\n  });\n\n  return options;\n};\n\nmodule.exports = normalizeOptions;\n"]},"metadata":{},"sourceType":"script"}