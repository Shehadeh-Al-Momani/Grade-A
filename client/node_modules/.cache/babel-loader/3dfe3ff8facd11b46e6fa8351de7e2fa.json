{"ast":null,"code":"/**\n * Gets the socket integration to use for Webpack messages.\n * @param {'wds' | 'whm' | 'wps' | string} integrationType A valid socket integration type or a path to a module.\n * @returns {string} Path to the resolved socket integration module.\n */\nfunction getSocketIntegration(integrationType) {\n  let resolvedSocketIntegration;\n\n  switch (integrationType) {\n    case 'wds':\n      {\n        resolvedSocketIntegration = require.resolve('../../sockets/WDSSocket');\n        break;\n      }\n\n    case 'whm':\n      {\n        resolvedSocketIntegration = require.resolve('../../sockets/WHMEventSource');\n        break;\n      }\n\n    case 'wps':\n      {\n        resolvedSocketIntegration = require.resolve('../../sockets/WPSSocket');\n        break;\n      }\n\n    default:\n      {\n        resolvedSocketIntegration = require.resolve(integrationType);\n        break;\n      }\n  }\n\n  return resolvedSocketIntegration;\n}\n\nmodule.exports = getSocketIntegration;","map":{"version":3,"sources":["E:/JCA/Projects/Project-5/Grade-A/Front-End/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/getSocketIntegration.js"],"names":["getSocketIntegration","integrationType","resolvedSocketIntegration","require","resolve","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA8BC,eAA9B,EAA+C;AAC7C,MAAIC,yBAAJ;;AACA,UAAQD,eAAR;AACE,SAAK,KAAL;AAAY;AACVC,QAAAA,yBAAyB,GAAGC,OAAO,CAACC,OAAR,CAAgB,yBAAhB,CAA5B;AACA;AACD;;AACD,SAAK,KAAL;AAAY;AACVF,QAAAA,yBAAyB,GAAGC,OAAO,CAACC,OAAR,CAAgB,8BAAhB,CAA5B;AACA;AACD;;AACD,SAAK,KAAL;AAAY;AACVF,QAAAA,yBAAyB,GAAGC,OAAO,CAACC,OAAR,CAAgB,yBAAhB,CAA5B;AACA;AACD;;AACD;AAAS;AACPF,QAAAA,yBAAyB,GAAGC,OAAO,CAACC,OAAR,CAAgBH,eAAhB,CAA5B;AACA;AACD;AAhBH;;AAmBA,SAAOC,yBAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBN,oBAAjB","sourcesContent":["/**\n * Gets the socket integration to use for Webpack messages.\n * @param {'wds' | 'whm' | 'wps' | string} integrationType A valid socket integration type or a path to a module.\n * @returns {string} Path to the resolved socket integration module.\n */\nfunction getSocketIntegration(integrationType) {\n  let resolvedSocketIntegration;\n  switch (integrationType) {\n    case 'wds': {\n      resolvedSocketIntegration = require.resolve('../../sockets/WDSSocket');\n      break;\n    }\n    case 'whm': {\n      resolvedSocketIntegration = require.resolve('../../sockets/WHMEventSource');\n      break;\n    }\n    case 'wps': {\n      resolvedSocketIntegration = require.resolve('../../sockets/WPSSocket');\n      break;\n    }\n    default: {\n      resolvedSocketIntegration = require.resolve(integrationType);\n      break;\n    }\n  }\n\n  return resolvedSocketIntegration;\n}\n\nmodule.exports = getSocketIntegration;\n"]},"metadata":{},"sourceType":"script"}