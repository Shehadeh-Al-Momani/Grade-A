{"ast":null,"code":"var _jsxFileName = \"E:\\\\JCA\\\\Projects\\\\Project-5\\\\Grade-A\\\\Front-End\\\\src\\\\components\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport jwt_decode from 'jwt-decode';\nimport './Chat.css';\nimport useChat from './useChat';\nlet token = localStorage.getItem('token');\nconst decoded = jwt_decode(token);\nlet cuurentUser = decoded.id;\n\nconst ChatRoom = props => {\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  let otherUser = id;\n  const {\n    messages,\n    sendMessage\n  } = useChat(otherUser, cuurentUser);\n  const [newMessage, setNewMessage] = useState('');\n  const [allMsg, setAllMsg] = useState([]);\n  useEffect(() => {\n    getAllMsg();\n  }, [otherUser]);\n\n  const getAllMsg = () => {\n    axios.get(`http://localhost:5000/${cuurentUser}/${otherUser}`).then(res => {\n      setAllMsg(res.data);\n    }).catch(err => {\n      console.log('ERR: ', err);\n    });\n  };\n\n  const getUser = () => {\n    if (decoded.role_id === 3) {\n      axios.get(`http://localhost:5000//studentsinstructor_datails/${otherUser}`).then(res => {\n        setAllMsg(res.data);\n      }).catch(err => {\n        console.log('ERR: ', err);\n      });\n    } else {\n      axios.get(`http://localhost:5000/${cuurentUser}/${otherUser}`).then(res => {\n        setAllMsg(res.data);\n      }).catch(err => {\n        console.log('ERR: ', err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-room-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"room-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \" \", otherUser), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"messages-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, messages.map((e, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: `message-item ${e.sender === 1 ? 'senderMsg' : 'receivedMsg'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, e.message, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newMessage,\n    placeholder: \"Write message...\",\n    className: \"new-message-input-field\",\n    onChange: e => {\n      setNewMessage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      sendMessage(newMessage, cuurentUser);\n      setNewMessage('');\n    },\n    className: \"send-message-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \" \", '>')));\n};\n\nexport default ChatRoom;","map":{"version":3,"sources":["E:/JCA/Projects/Project-5/Grade-A/Front-End/src/components/Chat.js"],"names":["React","useState","useEffect","Link","Route","axios","jwt_decode","useChat","token","localStorage","getItem","decoded","cuurentUser","id","ChatRoom","props","match","params","otherUser","messages","sendMessage","newMessage","setNewMessage","allMsg","setAllMsg","getAllMsg","get","then","res","data","catch","err","console","log","getUser","role_id","map","e","i","sender","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport './Chat.css';\r\nimport useChat from './useChat';\r\nlet token = localStorage.getItem('token');\r\nconst decoded = jwt_decode(token);\r\nlet cuurentUser = decoded.id;\r\n\r\nconst ChatRoom = (props) => {\r\n  const { match: { params: { id } } } = props;\r\n  let otherUser = id;\r\n  const { messages, sendMessage } = useChat(otherUser, cuurentUser);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [allMsg, setAllMsg] = useState([]);\r\n  useEffect(() => { getAllMsg() }, [otherUser]);\r\n\r\n\r\n  const getAllMsg = () => {\r\n    axios.get(`http://localhost:5000/${cuurentUser}/${otherUser}`)\r\n      .then((res) => {\r\n        setAllMsg(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log('ERR: ', err);\r\n      })\r\n  };\r\n\r\n\r\n  const getUser = () => {\r\n\r\n    if (decoded.role_id === 3) {\r\n      axios.get(`http://localhost:5000//studentsinstructor_datails/${otherUser}`)\r\n        .then((res) => {\r\n          setAllMsg(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log('ERR: ', err);\r\n        })\r\n    }\r\n    else {\r\n      axios.get(`http://localhost:5000/${cuurentUser}/${otherUser}`)\r\n        .then((res) => {\r\n          setAllMsg(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log('ERR: ', err);\r\n        })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='chat-room-container'>\r\n      <h1 className='room-name'> {otherUser}</h1>\r\n      <div className='messages-container'>\r\n        <ol className='messages-list' >\r\n          {messages.map((e, i) => (\r\n            <li key={i} className={`message-item ${(e.sender === 1) ? 'senderMsg' : 'receivedMsg'}`}>{e.message} </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <div className='input-send'>\r\n        <input value={newMessage} placeholder='Write message...' className='new-message-input-field' onChange={(e) => { setNewMessage(e.target.value) }}\r\n        />\r\n        <button onClick={(e) => { sendMessage(newMessage, cuurentUser); setNewMessage('') }} className='send-message-button'> {'>'}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n\r\n"]},"metadata":{},"sourceType":"module"}